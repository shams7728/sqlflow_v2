{
    "id": "aggregate-functions",
    "title": "Aggregate Functions",
    "category": "Functions",
    "difficulty": "Intermediate",
    "estimatedTime": "12 min",
    "starterQuery": "SELECT COUNT(*) FROM employees;",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What Are Aggregate Functions?\nAggregate functions perform a calculation on a set of values and return a single value. They are used to summarize data."
        },
        {
            "type": "paragraph",
            "text": "2. Why Are They Useful?\nThey help answer questions like totals, averages, counts, max, and min values. Useful in reporting and analytics."
        },
        {
            "type": "paragraph",
            "text": "3. Where Are They Used?\nUsed with SELECT statements and often grouped using GROUP BY. Common in dashboards and summaries."
        },
        {
            "type": "paragraph",
            "text": "4. How to Use Them?\nJust wrap the column inside a function like COUNT(), AVG(), MAX(), etc. Example: `SELECT AVG(salary) FROM employees;`"
        },
        {
            "type": "table",
            "columns": [
                "Function",
                "Description"
            ],
            "rows": [
                [
                    "COUNT()",
                    "Returns the number of rows"
                ],
                [
                    "SUM()",
                    "Calculates total sum of values"
                ],
                [
                    "AVG()",
                    "Calculates average of values"
                ],
                [
                    "MAX()",
                    "Finds the maximum value"
                ],
                [
                    "MIN()",
                    "Finds the minimum value"
                ]
            ]
        },
        {
            "type": "note",
            "text": "Aggregate functions ignore NULL values except for COUNT(*), which includes them."
        },
        {
            "type": "code",
            "text": "SELECT AVG(salary) FROM employees;"
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "employees",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "department",
                        "type": "TEXT"
                    },
                    {
                        "name": "salary",
                        "type": "INTEGER"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "employees": [
            {
                "id": 1,
                "name": "Alice",
                "department": "HR",
                "salary": 60000
            },
            {
                "id": 2,
                "name": "Bob",
                "department": "Engineering",
                "salary": 75000
            },
            {
                "id": 3,
                "name": "Charlie",
                "department": "Engineering",
                "salary": 80000
            },
            {
                "id": 4,
                "name": "Diana",
                "department": "Marketing",
                "salary": 65000
            },
            {
                "id": 5,
                "name": "Eva",
                "department": "HR",
                "salary": 62000
            }
        ]
    },
    "examples": [
        {
            "query": "SELECT COUNT(*) FROM employees;",
            "description": "Count total employees",
            "explanation": "Returns the number of rows in the employees table."
        },
        {
            "query": "SELECT AVG(salary) FROM employees;",
            "description": "Average salary",
            "explanation": "Calculates the average salary across all employees."
        }
    ],
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic Aggregate Functions Query",
            "description": "Practice the fundamental concepts of Aggregate Functions.",
            "starterCode": "-- Practice Aggregate Functions\n-- Write your query here",
            "solution": "-- Solution will depend on the specific Aggregate Functions lesson",
            "hint": "Review the Aggregate Functions syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating Aggregate Functions functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate Aggregate Functions",
            "description": "Apply Aggregate Functions with additional complexity.",
            "starterCode": "-- Intermediate Aggregate Functions practice\n-- Your code here",
            "solution": "-- More complex Aggregate Functions solution",
            "hint": "Combine Aggregate Functions with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using Aggregate Functions."
        },
        {
            "id": "practice_3",
            "title": "Advanced Aggregate Functions",
            "description": "Master advanced Aggregate Functions techniques.",
            "starterCode": "-- Advanced Aggregate Functions practice\n-- Your advanced query here",
            "solution": "-- Advanced Aggregate Functions solution",
            "hint": "Think about edge cases and optimization for Aggregate Functions.",
            "expectedOutput": "Advanced Aggregate Functions results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world Aggregate Functions",
            "description": "Apply Aggregate Functions to solve a realistic business problem.",
            "starterCode": "-- Real-world Aggregate Functions scenario\n-- Solve the business problem",
            "solution": "-- Business-focused Aggregate Functions solution",
            "hint": "Consider how Aggregate Functions would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "aggregate-functions_q1",
            "type": "mcq",
            "question": "What is the primary purpose of Aggregate Functions?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement Aggregate Functions functionality",
                "To create database backups"
            ],
            "answer": "To implement Aggregate Functions functionality",
            "explanation": "Aggregate Functions is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "aggregate-functions_q2",
            "type": "truefalse",
            "question": "Aggregate Functions can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including Aggregate Functions can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "aggregate-functions_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using Aggregate Functions?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using Aggregate Functions, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "aggregate-functions_q4",
            "type": "truefalse",
            "question": "Aggregate Functions is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "aggregate-functions_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with Aggregate Functions?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "aggregate-functions_q6",
            "type": "mcq",
            "question": "When learning Aggregate Functions, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "aggregate-functions_q7",
            "type": "truefalse",
            "question": "Understanding Aggregate Functions is important for database professionals.",
            "answer": true,
            "explanation": "Aggregate Functions is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "aggregate-functions_q8",
            "type": "mcq",
            "question": "What should you do before using Aggregate Functions in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "aggregate-functions_ch1",
            "title": "Aggregate Salary Challenge",
            "steps": [
                {
                    "stepId": "aggregate-functions_ch1_step1",
                    "description": "Step 1: Calculate the total salary of all employees.",
                    "solution": "SELECT SUM(salary) FROM employees;"
                },
                {
                    "stepId": "aggregate-functions_ch1_step2",
                    "description": "Step 2: Get the minimum salary from employees.",
                    "solution": "SELECT MIN(salary) FROM employees;"
                }
            ]
        }
    ]
}