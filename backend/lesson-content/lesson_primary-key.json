{
    "id": "primary-key",
    "title": "PRIMARY KEY Constraint",
    "category": "Data Definition",
    "difficulty": "Beginner",
    "estimatedTime": "15 min",
    "starterQuery": "/* A table should always have a primary key.\n   Let's add one to the 'users' table. */\n\n-- This command won't work on an existing table in SQLite,\n-- but shows the syntax for creating a new one.\nCREATE TABLE users (\n    user_id INTEGER PRIMARY KEY,\n    username TEXT NOT NULL\n);",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is a PRIMARY KEY?\nA `PRIMARY KEY` is a constraint that uniquely identifies each record in a table. It is the most important constraint in database design."
        },
        {
            "type": "paragraph",
            "text": "2. What are the rules for a PRIMARY KEY?\nA primary key column must follow two strict rules: it must contain UNIQUE values, and it cannot contain NULL values. A table can only have one primary key."
        },
        {
            "type": "paragraph",
            "text": "3. How is it defined?\nYou can define a primary key on a single column by adding the `PRIMARY KEY` keywords after the column's data type during table creation. You can also define a composite primary key, which consists of multiple columns."
        },
        {
            "type": "paragraph",
            "text": "4. Why is it so important?\nThe primary key is the main way to identify and access a specific row. It's also used to create relationships between tables using Foreign Keys, which we will learn about next."
        },
        {
            "type": "code",
            "text": "-- Defining a primary key when creating a table:\nCREATE TABLE products (\n    product_sku TEXT PRIMARY KEY,\n    product_name TEXT NOT NULL,\n    price REAL\n);"
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "users",
                "columns": [
                    {
                        "name": "user_id",
                        "type": "INTEGER"
                    },
                    {
                        "name": "username",
                        "type": "TEXT"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "users": [
            {
                "user_id": 101,
                "username": "alice"
            },
            {
                "user_id": 102,
                "username": "bob"
            }
        ]
    },
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic PRIMARY KEY Constraint Query",
            "description": "Practice the fundamental concepts of PRIMARY KEY Constraint.",
            "starterCode": "-- Practice PRIMARY KEY Constraint\n-- Write your query here",
            "solution": "-- Solution will depend on the specific PRIMARY KEY Constraint lesson",
            "hint": "Review the PRIMARY KEY Constraint syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating PRIMARY KEY Constraint functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate PRIMARY KEY Constraint",
            "description": "Apply PRIMARY KEY Constraint with additional complexity.",
            "starterCode": "-- Intermediate PRIMARY KEY Constraint practice\n-- Your code here",
            "solution": "-- More complex PRIMARY KEY Constraint solution",
            "hint": "Combine PRIMARY KEY Constraint with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using PRIMARY KEY Constraint."
        },
        {
            "id": "practice_3",
            "title": "Advanced PRIMARY KEY Constraint",
            "description": "Master advanced PRIMARY KEY Constraint techniques.",
            "starterCode": "-- Advanced PRIMARY KEY Constraint practice\n-- Your advanced query here",
            "solution": "-- Advanced PRIMARY KEY Constraint solution",
            "hint": "Think about edge cases and optimization for PRIMARY KEY Constraint.",
            "expectedOutput": "Advanced PRIMARY KEY Constraint results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world PRIMARY KEY Constraint",
            "description": "Apply PRIMARY KEY Constraint to solve a realistic business problem.",
            "starterCode": "-- Real-world PRIMARY KEY Constraint scenario\n-- Solve the business problem",
            "solution": "-- Business-focused PRIMARY KEY Constraint solution",
            "hint": "Consider how PRIMARY KEY Constraint would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "primary-key_q1",
            "type": "mcq",
            "question": "What is the primary purpose of PRIMARY KEY Constraint?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement PRIMARY KEY Constraint functionality",
                "To create database backups"
            ],
            "answer": "To implement PRIMARY KEY Constraint functionality",
            "explanation": "PRIMARY KEY Constraint is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "primary-key_q2",
            "type": "truefalse",
            "question": "PRIMARY KEY Constraint can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including PRIMARY KEY Constraint can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "primary-key_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using PRIMARY KEY Constraint?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using PRIMARY KEY Constraint, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "primary-key_q4",
            "type": "truefalse",
            "question": "PRIMARY KEY Constraint is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "primary-key_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with PRIMARY KEY Constraint?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "primary-key_q6",
            "type": "mcq",
            "question": "When learning PRIMARY KEY Constraint, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "primary-key_q7",
            "type": "truefalse",
            "question": "Understanding PRIMARY KEY Constraint is important for database professionals.",
            "answer": true,
            "explanation": "PRIMARY KEY Constraint is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "primary-key_q8",
            "type": "mcq",
            "question": "What should you do before using PRIMARY KEY Constraint in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "pk_ch1",
            "title": "Define a Student Roster",
            "steps": [
                {
                    "stepId": "pk_ch1_step1",
                    "description": "Create a table named `roster` for students. It needs a `student_id` column (INTEGER) that will serve as the unique identifier for each student.",
                    "solution": "CREATE TABLE roster (student_id INTEGER PRIMARY KEY, first_name TEXT, last_name TEXT);"
                }
            ]
        },
        {
            "id": "pk_ch2",
            "title": "Define Order Items",
            "steps": [
                {
                    "stepId": "pk_ch2_step1",
                    "description": "Create a table named `order_items`. An order can have multiple products, and a product can be in multiple orders. Therefore, the combination of `order_id` and `product_id` must be unique. Create the table with these two columns as a composite PRIMARY KEY.",
                    "solution": "CREATE TABLE order_items (order_id INTEGER, product_id INTEGER, quantity INTEGER, PRIMARY KEY (order_id, product_id));"
                }
            ]
        }
    ]
}