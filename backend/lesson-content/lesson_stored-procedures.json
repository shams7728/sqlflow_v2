{
    "id": "stored-procedures",
    "title": "Stored Procedures",
    "category": "Advanced Querying",
    "difficulty": "Advanced",
    "estimatedTime": "25 min",
    "starterQuery": "/* This is a conceptual lesson on Stored Procedures.\n   Since they are not supported in SQLite, there are no queries to run.\n   The examples below use T-SQL (SQL Server) syntax. */",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is a Stored Procedure?\nA stored procedure is a prepared set of one or more SQL statements that are saved in the database. Think of it as a function or a script that lives on the database server. You can execute it by calling its name, which makes complex operations simple to reuse."
        },
        {
            "type": "paragraph",
            "text": "2. What are the main advantages of using them?\nThere are four key benefits: 1. Performance: The database analyzes and optimizes the procedure's query plan once and caches it, making subsequent executions much faster. 2. Reduced Network Traffic: Instead of sending hundreds of lines of SQL from your application, you send a single line to execute the procedure. 3.Enhanced Security: You can grant an application permission to run a procedure without giving it direct permission to the underlying tables. 4. Reusability & Consistency: It ensures that complex business logic is applied consistently every time, as the code is centralized in one place."
        },
        {
            "type": "paragraph",
            "text": "3. What are Input and Output Parameters?\nStored procedures can be made dynamic by using parameters. An **input parameter** allows you to pass a value into the procedure (e.g., a user ID to look up). An **output parameter** allows the procedure to pass a value back out to the calling application (e.g., the total number of records found)."
        },
        {
            "type": "paragraph",
            "text": "4. How is a procedure different from a User-Defined Function (UDF)?\nWhile similar, they have key differences. UDFs are typically used within a SQL statement (like `SELECT dbo.MyFunction(column)`), whereas stored procedures are executed on their own (`EXEC MyProcedure`). Procedures can perform data modification and return multiple result sets, while scalar UDFs are generally expected to return a single value and not modify data."
        },
        {
            "type": "code",
            "text": "-- SQL Server Example: A procedure with input and output parameters\nCREATE PROCEDURE sp_GetEmployeeCountForDept\n    @DepartmentName NVARCHAR(50),\n    @EmployeeCount INT OUTPUT\nAS\nBEGIN\n    -- This statement calculates the count and assigns it to the output parameter\n    SELECT @EmployeeCount = COUNT(e.id)\n    FROM employees e\n    JOIN departments d ON e.department_id = d.id\n    WHERE d.name = @DepartmentName;\nEND;\n\n-- How to execute it and get the output value\nDECLARE @CountResult INT;\nEXEC sp_GetEmployeeCountForDept @DepartmentName = 'Sales', @EmployeeCount = @CountResult OUTPUT;\nSELECT @CountResult AS NumberOfSalesEmployees;"
        },
        {
            "type": "note",
            "text": "Stored procedures are a server-side feature. Their syntax and capabilities vary significantly between database systems like SQL Server, Oracle, and PostgreSQL. They are not supported in file-based databases like SQLite."
        }
    ],
    "schema": {
        "tables": []
    },
    "sample_data": {},
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic Stored Procedures Query",
            "description": "Practice the fundamental concepts of Stored Procedures.",
            "starterCode": "-- Practice Stored Procedures\n-- Write your query here",
            "solution": "-- Solution will depend on the specific Stored Procedures lesson",
            "hint": "Review the Stored Procedures syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating Stored Procedures functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate Stored Procedures",
            "description": "Apply Stored Procedures with additional complexity.",
            "starterCode": "-- Intermediate Stored Procedures practice\n-- Your code here",
            "solution": "-- More complex Stored Procedures solution",
            "hint": "Combine Stored Procedures with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using Stored Procedures."
        },
        {
            "id": "practice_3",
            "title": "Advanced Stored Procedures",
            "description": "Master advanced Stored Procedures techniques.",
            "starterCode": "-- Advanced Stored Procedures practice\n-- Your advanced query here",
            "solution": "-- Advanced Stored Procedures solution",
            "hint": "Think about edge cases and optimization for Stored Procedures.",
            "expectedOutput": "Advanced Stored Procedures results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world Stored Procedures",
            "description": "Apply Stored Procedures to solve a realistic business problem.",
            "starterCode": "-- Real-world Stored Procedures scenario\n-- Solve the business problem",
            "solution": "-- Business-focused Stored Procedures solution",
            "hint": "Consider how Stored Procedures would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "challenges": [],
    "quiz": [
        {
            "id": "stored-procedures_q1",
            "type": "mcq",
            "question": "What is the primary purpose of Stored Procedures?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement Stored Procedures functionality",
                "To create database backups"
            ],
            "answer": "To implement Stored Procedures functionality",
            "explanation": "Stored Procedures is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "stored-procedures_q2",
            "type": "truefalse",
            "question": "Stored Procedures can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including Stored Procedures can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "stored-procedures_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using Stored Procedures?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using Stored Procedures, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "stored-procedures_q4",
            "type": "truefalse",
            "question": "Stored Procedures is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "stored-procedures_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with Stored Procedures?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "stored-procedures_q6",
            "type": "mcq",
            "question": "When learning Stored Procedures, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "stored-procedures_q7",
            "type": "truefalse",
            "question": "Understanding Stored Procedures is important for database professionals.",
            "answer": true,
            "explanation": "Stored Procedures is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "stored-procedures_q8",
            "type": "mcq",
            "question": "What should you do before using Stored Procedures in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ]
}