{
    "id": "unique-not-null-constraints",
    "title": "UNIQUE and NOT NULL",
    "category": "Data Definition",
    "difficulty": "Beginner",
    "estimatedTime": "18 min",
    "starterQuery": "/* Let's create a table with some data integrity rules! */\n\nCREATE TABLE app_users (\n    user_id INTEGER PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    email TEXT UNIQUE,\n    full_name TEXT NOT NULL\n);",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is the NOT NULL Constraint?\nThe `NOT NULL` constraint ensures that a column cannot have a NULL (empty) value. This forces a field to always contain a value, which is critical for important information like names, IDs, or status fields."
        },
        {
            "type": "paragraph",
            "text": "2. What is the UNIQUE Constraint?\nThe `UNIQUE` constraint ensures that all values in a column are different from one another. This prevents duplicate entries in that specific column. A `PRIMARY KEY` constraint automatically has a `UNIQUE` constraint by default."
        },
        {
            "type": "paragraph",
            "text": "3. Can they be used together?\nYes. Using `UNIQUE` and `NOT NULL` together on a column ensures that every row has a value in that column, and each of those values is unique across the entire table. This is common for usernames or email addresses."
        },
        {
            "type": "paragraph",
            "text": "4. How are they defined?\nYou simply add the keywords `UNIQUE` and/or `NOT NULL` after the data type in a column's definition within a `CREATE TABLE` statement."
        },
        {
            "type": "code",
            "text": "-- Example: Creating a products table\nCREATE TABLE products (\n    product_id INTEGER PRIMARY KEY,\n    sku TEXT UNIQUE NOT NULL, -- Stock Keeping Unit must be unique and not empty\n    name TEXT NOT NULL -- Every product must have a name\n);"
        }
    ],
    "schema": {
        "tables": []
    },
    "sample_data": {},
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic UNIQUE and NOT NULL Query",
            "description": "Practice the fundamental concepts of UNIQUE and NOT NULL.",
            "starterCode": "-- Practice UNIQUE and NOT NULL\n-- Write your query here",
            "solution": "-- Solution will depend on the specific UNIQUE and NOT NULL lesson",
            "hint": "Review the UNIQUE and NOT NULL syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating UNIQUE and NOT NULL functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate UNIQUE and NOT NULL",
            "description": "Apply UNIQUE and NOT NULL with additional complexity.",
            "starterCode": "-- Intermediate UNIQUE and NOT NULL practice\n-- Your code here",
            "solution": "-- More complex UNIQUE and NOT NULL solution",
            "hint": "Combine UNIQUE and NOT NULL with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using UNIQUE and NOT NULL."
        },
        {
            "id": "practice_3",
            "title": "Advanced UNIQUE and NOT NULL",
            "description": "Master advanced UNIQUE and NOT NULL techniques.",
            "starterCode": "-- Advanced UNIQUE and NOT NULL practice\n-- Your advanced query here",
            "solution": "-- Advanced UNIQUE and NOT NULL solution",
            "hint": "Think about edge cases and optimization for UNIQUE and NOT NULL.",
            "expectedOutput": "Advanced UNIQUE and NOT NULL results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world UNIQUE and NOT NULL",
            "description": "Apply UNIQUE and NOT NULL to solve a realistic business problem.",
            "starterCode": "-- Real-world UNIQUE and NOT NULL scenario\n-- Solve the business problem",
            "solution": "-- Business-focused UNIQUE and NOT NULL solution",
            "hint": "Consider how UNIQUE and NOT NULL would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "unique-not-null-constraints_q1",
            "type": "mcq",
            "question": "What is the primary purpose of UNIQUE and NOT NULL?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement UNIQUE and NOT NULL functionality",
                "To create database backups"
            ],
            "answer": "To implement UNIQUE and NOT NULL functionality",
            "explanation": "UNIQUE and NOT NULL is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "unique-not-null-constraints_q2",
            "type": "truefalse",
            "question": "UNIQUE and NOT NULL can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including UNIQUE and NOT NULL can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "unique-not-null-constraints_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using UNIQUE and NOT NULL?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using UNIQUE and NOT NULL, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "unique-not-null-constraints_q4",
            "type": "truefalse",
            "question": "UNIQUE and NOT NULL is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "unique-not-null-constraints_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with UNIQUE and NOT NULL?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "unique-not-null-constraints_q6",
            "type": "mcq",
            "question": "When learning UNIQUE and NOT NULL, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "unique-not-null-constraints_q7",
            "type": "truefalse",
            "question": "Understanding UNIQUE and NOT NULL is important for database professionals.",
            "answer": true,
            "explanation": "UNIQUE and NOT NULL is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "unique-not-null-constraints_q8",
            "type": "mcq",
            "question": "What should you do before using UNIQUE and NOT NULL in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "unn_ch1",
            "title": "Define a Secure User Table",
            "steps": [
                {
                    "stepId": "unn_ch1_step1",
                    "description": "Create a table named `login_credentials`. It should have `user_id` (INTEGER PRIMARY KEY), `username` (TEXT) that must be unique and not null, and `password_hash` (TEXT) that cannot be null.",
                    "solution": "CREATE TABLE login_credentials (user_id INTEGER PRIMARY KEY, username TEXT UNIQUE NOT NULL, password_hash TEXT NOT NULL);"
                }
            ]
        },
        {
            "id": "unn_ch2",
            "title": "Define a Tags Table",
            "steps": [
                {
                    "stepId": "unn_ch2_step1",
                    "description": "Create a table named `tags` for a blog. It needs a `tag_id` (INTEGER PRIMARY KEY) and a `tag_name` (TEXT). Each tag name must be unique.",
                    "solution": "CREATE TABLE tags (tag_id INTEGER PRIMARY KEY, tag_name TEXT UNIQUE);"
                }
            ]
        }
    ]
}