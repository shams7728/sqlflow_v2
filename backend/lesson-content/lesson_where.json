{
    "id": "where",
    "title": "WHERE Clause",
    "category": "Data Retrieval",
    "difficulty": "Beginner",
    "estimatedTime": "10 min",
    "starterQuery": "SELECT * FROM students WHERE grade = 'A';",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is the WHERE clause?\nThe WHERE clause in SQL is used to filter records from a table based on specific conditions. It allows you to return only those rows that meet the defined criteria."
        },
        {
            "type": "paragraph",
            "text": "2. Why use the WHERE clause?\nYou use WHERE when you want to retrieve only the records that match certain conditions, such as students older than 20 or employees from a particular department."
        },
        {
            "type": "paragraph",
            "text": "3. Where is WHERE used?\nThe WHERE clause comes after the FROM clause in a SELECT statement. It is also used with UPDATE, DELETE, and other statements."
        },
        {
            "type": "paragraph",
            "text": "4. How does it work?\nSQL evaluates the condition(s) provided after WHERE. If the condition returns true for a row, that row is included in the result set."
        },
        {
            "type": "table",
            "columns": [
                "Clause",
                "Purpose"
            ],
            "rows": [
                [
                    "WHERE column = value",
                    "Match exact value"
                ],
                [
                    "WHERE column > value",
                    "Match values greater than"
                ],
                [
                    "WHERE column < value",
                    "Match values less than"
                ],
                [
                    "WHERE column <> value",
                    "Match values not equal to"
                ]
            ]
        },
        {
            "type": "code",
            "text": "SELECT column1, column2 FROM table_name WHERE condition;"
        },
        {
            "type": "note",
            "text": "You can combine multiple conditions using AND, OR, and NOT."
        }
    ],
    "examples": [
        {
            "query": "SELECT name FROM students WHERE grade = 'A';",
            "description": "Select students with grade A",
            "explanation": "Returns names of students who got grade A."
        },
        {
            "query": "SELECT * FROM students WHERE age > 20;",
            "description": "Select students older than 20",
            "explanation": "Returns full data of students whose age is above 20."
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "students",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "age",
                        "type": "INTEGER"
                    },
                    {
                        "name": "grade",
                        "type": "TEXT"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "students": [
            {
                "id": 1,
                "name": "Alice",
                "age": 20,
                "grade": "A"
            },
            {
                "id": 2,
                "name": "Bob",
                "age": 21,
                "grade": "B"
            },
            {
                "id": 3,
                "name": "Charlie",
                "age": 19,
                "grade": "A"
            },
            {
                "id": 4,
                "name": "Diana",
                "age": 22,
                "grade": "C"
            },
            {
                "id": 5,
                "name": "Eva",
                "age": 20,
                "grade": "B"
            }
        ]
    },
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic WHERE Clause",
            "description": "Filter rows using a simple WHERE condition.",
            "starterCode": "-- Filter with WHERE clause\nSELECT * FROM customers\nWHERE \n-- Your condition here",
            "solution": "SELECT * FROM customers WHERE customer_id = 1;",
            "hint": "Use WHERE followed by a condition like column = value.",
            "expectedOutput": "Only rows that match the specified condition."
        },
        {
            "id": "practice_2",
            "title": "Text Filtering",
            "description": "Filter rows based on text values.",
            "starterCode": "-- Filter by text value\nSELECT * FROM customers\nWHERE \n-- Text condition here",
            "solution": "SELECT * FROM customers WHERE name = 'Alice Johnson';",
            "hint": "Use single quotes around text values in conditions.",
            "expectedOutput": "Rows where the text column matches exactly."
        },
        {
            "id": "practice_3",
            "title": "Multiple Conditions",
            "description": "Use AND/OR to combine multiple conditions.",
            "starterCode": "-- Multiple conditions\nSELECT * FROM customers\nWHERE \n-- Condition 1 AND/OR Condition 2",
            "solution": "SELECT * FROM customers WHERE customer_id > 1 AND name LIKE 'B%';",
            "hint": "Use AND to require both conditions, OR for either condition.",
            "expectedOutput": "Rows that satisfy the combined conditions."
        },
        {
            "id": "practice_4",
            "title": "Complex Filtering",
            "description": "Create a complex filter with multiple operators.",
            "starterCode": "-- Complex filtering\nSELECT * FROM customers\nWHERE \n-- Complex condition",
            "solution": "SELECT * FROM customers WHERE (customer_id BETWEEN 1 AND 5) OR name LIKE '%son';",
            "hint": "Use parentheses to group conditions and combine different operators.",
            "expectedOutput": "Rows matching the complex filter criteria."
        }
    ],
    "quiz": [
        {
            "id": "where_q1",
            "type": "mcq",
            "question": "What is the primary purpose of WHERE Clause?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement WHERE Clause functionality",
                "To create database backups"
            ],
            "answer": "To implement WHERE Clause functionality",
            "explanation": "WHERE Clause is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "where_q2",
            "type": "truefalse",
            "question": "WHERE Clause can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including WHERE Clause can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "where_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using WHERE Clause?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using WHERE Clause, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "where_q4",
            "type": "truefalse",
            "question": "WHERE Clause is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "where_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with WHERE Clause?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "where_q6",
            "type": "mcq",
            "question": "When learning WHERE Clause, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "where_q7",
            "type": "truefalse",
            "question": "Understanding WHERE Clause is important for database professionals.",
            "answer": true,
            "explanation": "WHERE Clause is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "where_q8",
            "type": "mcq",
            "question": "What should you do before using WHERE Clause in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "where_ch1",
            "title": "Filter School Records",
            "steps": [
                {
                    "stepId": "where_where_ch1_step1",
                    "description": "Step 1: Select students with grade A.",
                    "solution": "SELECT * FROM students WHERE grade = 'A';"
                },
                {
                    "stepId": "where_where_ch1_step2",
                    "description": "Step 2: Select students younger than 21.",
                    "solution": "SELECT * FROM students WHERE age < 21;"
                }
            ]
        }
    ]
}