{
    "id": "window-functions",
    "title": "Window Functions",
    "category": "Advanced Querying",
    "difficulty": "Advanced",
    "estimatedTime": "25 min",
    "starterQuery": "/* Let's rank products within each category by sales amount. */\nSELECT\n  product,\n  category,\n  amount,\n  RANK() OVER (PARTITION BY category ORDER BY amount DESC) as category_rank\nFROM sales;",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What are Window Functions?\nWindow functions perform calculations across a set of table rows that are somehow related to the current row. Unlike aggregate functions, they do not group rows into a single output rowâ€”they return a value for each row."
        },
        {
            "type": "paragraph",
            "text": "2. Why are they useful?\nThey are incredibly powerful for creating rankings, calculating running totals, moving averages, or finding the first/last value within a group without collapsing the rows."
        },
        {
            "type": "paragraph",
            "text": "3. What is the basic syntax?\nThe core of a window function is the `OVER()` clause. The syntax is `FUNCTION_NAME() OVER (PARTITION BY ... ORDER BY ...)`."
        },
        {
            "type": "paragraph",
            "text": "4. What does PARTITION BY do?\n`PARTITION BY` divides the rows into smaller 'windows' or groups. The window function is then applied independently to each partition. It's like a `GROUP BY` but for window functions."
        },
        {
            "type": "code",
            "text": "-- Example: Calculate the running total of sales over time\nSELECT \n  sale_date, \n  amount, \n  SUM(amount) OVER (ORDER BY sale_date) as running_total\nFROM sales;"
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "sales",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "product",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "category",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "sale_date",
                        "type": "DATE"
                    },
                    {
                        "name": "amount",
                        "type": "REAL",
                        "constraints": "NOT NULL"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "sales": [
            {
                "id": 1,
                "product": "Laptop",
                "category": "Electronics",
                "sale_date": "2025-01-15",
                "amount": 1200.0
            },
            {
                "id": 2,
                "product": "Mouse",
                "category": "Electronics",
                "sale_date": "2025-01-15",
                "amount": 25.0
            },
            {
                "id": 3,
                "product": "Keyboard",
                "category": "Electronics",
                "sale_date": "2025-01-16",
                "amount": 75.0
            },
            {
                "id": 4,
                "product": "T-Shirt",
                "category": "Apparel",
                "sale_date": "2025-01-17",
                "amount": 20.0
            },
            {
                "id": 5,
                "product": "Jeans",
                "category": "Apparel",
                "sale_date": "2025-01-18",
                "amount": 90.0
            },
            {
                "id": 6,
                "product": "Jacket",
                "category": "Apparel",
                "sale_date": "2025-01-18",
                "amount": 150.0
            },
            {
                "id": 7,
                "product": "Monitor",
                "category": "Electronics",
                "sale_date": "2025-01-20",
                "amount": 300.0
            },
            {
                "id": 8,
                "product": "Coffee Maker",
                "category": "Home Goods",
                "sale_date": "2025-01-21",
                "amount": 120.0
            },
            {
                "id": 9,
                "product": "Blender",
                "category": "Home Goods",
                "sale_date": "2025-01-22",
                "amount": 80.0
            }
        ]
    },
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic Window Functions Query",
            "description": "Practice the fundamental concepts of Window Functions.",
            "starterCode": "-- Practice Window Functions\n-- Write your query here",
            "solution": "-- Solution will depend on the specific Window Functions lesson",
            "hint": "Review the Window Functions syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating Window Functions functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate Window Functions",
            "description": "Apply Window Functions with additional complexity.",
            "starterCode": "-- Intermediate Window Functions practice\n-- Your code here",
            "solution": "-- More complex Window Functions solution",
            "hint": "Combine Window Functions with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using Window Functions."
        },
        {
            "id": "practice_3",
            "title": "Advanced Window Functions",
            "description": "Master advanced Window Functions techniques.",
            "starterCode": "-- Advanced Window Functions practice\n-- Your advanced query here",
            "solution": "-- Advanced Window Functions solution",
            "hint": "Think about edge cases and optimization for Window Functions.",
            "expectedOutput": "Advanced Window Functions results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world Window Functions",
            "description": "Apply Window Functions to solve a realistic business problem.",
            "starterCode": "-- Real-world Window Functions scenario\n-- Solve the business problem",
            "solution": "-- Business-focused Window Functions solution",
            "hint": "Consider how Window Functions would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "window-functions_q1",
            "type": "mcq",
            "question": "What is the primary purpose of Window Functions?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement Window Functions functionality",
                "To create database backups"
            ],
            "answer": "To implement Window Functions functionality",
            "explanation": "Window Functions is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "window-functions_q2",
            "type": "truefalse",
            "question": "Window Functions can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including Window Functions can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "window-functions_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using Window Functions?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using Window Functions, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "window-functions_q4",
            "type": "truefalse",
            "question": "Window Functions is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "window-functions_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with Window Functions?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "window-functions_q6",
            "type": "mcq",
            "question": "When learning Window Functions, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "window-functions_q7",
            "type": "truefalse",
            "question": "Understanding Window Functions is important for database professionals.",
            "answer": true,
            "explanation": "Window Functions is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "window-functions_q8",
            "type": "mcq",
            "question": "What should you do before using Window Functions in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "wf_ch1",
            "title": "Calculate Running Total Sales",
            "steps": [
                {
                    "stepId": "wf_ch1_step1",
                    "description": "Write a query that calculates a running total of sales amounts over time. Select the `sale_date`, `amount`, and the running total, aliased as `running_total`.",
                    "solution": "SELECT sale_date, amount, SUM(amount) OVER (ORDER BY sale_date) AS running_total FROM sales;"
                }
            ]
        },
        {
            "id": "wf_ch2",
            "title": "Number Rows Within Categories",
            "steps": [
                {
                    "stepId": "wf_ch2_step1",
                    "description": "Assign a unique, sequential number to each product within its category, ordered by price from highest to lowest. Use the `ROW_NUMBER()` function.",
                    "solution": "SELECT product, category, ROW_NUMBER() OVER (PARTITION BY category ORDER BY amount DESC) as row_num FROM sales;"
                }
            ]
        }
    ]
}