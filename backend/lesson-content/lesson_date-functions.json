{
    "id": "date-functions",
    "title": "Date Functions",
    "category": "Functions",
    "difficulty": "Intermediate",
    "estimatedTime": "14 min",
    "starterQuery": "SELECT name, date('now') AS today FROM employees;",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What are Date Functions?\nDate functions are built-in SQL functions that allow you to manipulate and retrieve information about date and time values stored in a database."
        },
        {
            "type": "paragraph",
            "text": "2. Why Use Date Functions?\nThey are useful for formatting, comparing, and extracting parts of date values. For example, finding today's date, calculating age, or filtering records within a time range."
        },
        {
            "type": "paragraph",
            "text": "3. Where are Date Functions Used?\nThey are used in queries to return formatted dates, add or subtract days, compare timestamps, or extract specific parts like year, month, or weekday."
        },
        {
            "type": "paragraph",
            "text": "4. How Do You Use Date Functions?\nUse functions like `date()`, `datetime()`, `strftime()`, and modifiers like `+1 day`, `-7 days`, etc. These help transform or filter date-related data."
        },
        {
            "type": "table",
            "columns": [
                "Function",
                "Description"
            ],
            "rows": [
                [
                    "date('now')",
                    "Returns the current date (e.g., '2025-07-15')"
                ],
                [
                    "datetime('now')",
                    "Returns current date and time"
                ],
                [
                    "strftime('%Y', date)",
                    "Extracts the year"
                ],
                [
                    "date('now', '-7 day')",
                    "Returns the date 7 days ago"
                ],
                [
                    "julianday('now') - julianday(date)",
                    "Calculates difference in days between two dates"
                ]
            ]
        },
        {
            "type": "note",
            "text": "SQLite stores DATE and DATETIME as TEXT using the format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'."
        },
        {
            "type": "code",
            "text": "SELECT name, strftime('%Y', hire_date) AS hire_year FROM employees;"
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "employees",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "hire_date",
                        "type": "DATE"
                    },
                    {
                        "name": "last_login",
                        "type": "DATETIME"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "employees": [
            {
                "id": 1,
                "name": "Alice",
                "hire_date": "2020-01-15",
                "last_login": "2025-07-14 09:30:00"
            },
            {
                "id": 2,
                "name": "Bob",
                "hire_date": "2019-03-10",
                "last_login": "2025-07-12 15:20:00"
            },
            {
                "id": 3,
                "name": "Charlie",
                "hire_date": "2021-08-01",
                "last_login": "2025-07-13 18:45:00"
            }
        ]
    },
    "examples": [
        {
            "query": "SELECT name, date('now') AS today FROM employees;",
            "description": "Show todayâ€™s date for all employees",
            "explanation": "This uses the date('now') function to get the current date."
        },
        {
            "query": "SELECT name, strftime('%Y', hire_date) AS hire_year FROM employees;",
            "description": "Extract year from hire date",
            "explanation": "This uses strftime to return only the year from the hire_date column."
        }
    ],
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic Date Functions Query",
            "description": "Practice the fundamental concepts of Date Functions.",
            "starterCode": "-- Practice Date Functions\n-- Write your query here",
            "solution": "-- Solution will depend on the specific Date Functions lesson",
            "hint": "Review the Date Functions syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating Date Functions functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate Date Functions",
            "description": "Apply Date Functions with additional complexity.",
            "starterCode": "-- Intermediate Date Functions practice\n-- Your code here",
            "solution": "-- More complex Date Functions solution",
            "hint": "Combine Date Functions with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using Date Functions."
        },
        {
            "id": "practice_3",
            "title": "Advanced Date Functions",
            "description": "Master advanced Date Functions techniques.",
            "starterCode": "-- Advanced Date Functions practice\n-- Your advanced query here",
            "solution": "-- Advanced Date Functions solution",
            "hint": "Think about edge cases and optimization for Date Functions.",
            "expectedOutput": "Advanced Date Functions results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world Date Functions",
            "description": "Apply Date Functions to solve a realistic business problem.",
            "starterCode": "-- Real-world Date Functions scenario\n-- Solve the business problem",
            "solution": "-- Business-focused Date Functions solution",
            "hint": "Consider how Date Functions would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "date-functions_q1",
            "type": "mcq",
            "question": "What is the primary purpose of Date Functions?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement Date Functions functionality",
                "To create database backups"
            ],
            "answer": "To implement Date Functions functionality",
            "explanation": "Date Functions is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "date-functions_q2",
            "type": "truefalse",
            "question": "Date Functions can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including Date Functions can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "date-functions_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using Date Functions?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using Date Functions, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "date-functions_q4",
            "type": "truefalse",
            "question": "Date Functions is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "date-functions_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with Date Functions?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "date-functions_q6",
            "type": "mcq",
            "question": "When learning Date Functions, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "date-functions_q7",
            "type": "truefalse",
            "question": "Understanding Date Functions is important for database professionals.",
            "answer": true,
            "explanation": "Date Functions is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "date-functions_q8",
            "type": "mcq",
            "question": "What should you do before using Date Functions in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "date-functions_ch1",
            "title": "Date Calculations",
            "steps": [
                {
                    "stepId": "date-functions_ch1_step1",
                    "description": "Step 1: Get names and dates 7 days ago.",
                    "solution": "SELECT name, date('now', '-7 day') AS last_week FROM employees;"
                },
                {
                    "stepId": "date-functions_ch1_step2",
                    "description": "Step 2: Get the difference in days since hire.",
                    "solution": "SELECT name, ROUND(julianday('now') - julianday(hire_date)) AS days_since_hired FROM employees;"
                }
            ]
        }
    ]
}