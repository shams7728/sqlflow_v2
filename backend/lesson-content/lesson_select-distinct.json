{
    "id": "select-distinct",
    "title": "SELECT DISTINCT",
    "category": "Data Retrieval",
    "difficulty": "Beginner",
    "estimatedTime": "7 min",
    "starterQuery": "SELECT DISTINCT grade FROM students;",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is SELECT DISTINCT?\nThe SELECT DISTINCT statement is used to return only different (unique) values from a column or a combination of columns in a table."
        },
        {
            "type": "paragraph",
            "text": "2. Why use SELECT DISTINCT?\nIt's useful when you're analyzing data and want to avoid repeating the same value multiple times in the result. It ensures that only one occurrence of each value appears."
        },
        {
            "type": "paragraph",
            "text": "3. Where is it used?\nDISTINCT is typically used in reporting, analytics, and dashboardsâ€”where understanding diversity or uniqueness in the data is important."
        },
        {
            "type": "paragraph",
            "text": "4. How does it work?\nIt compares values across rows and filters out duplicates, only returning one record for each unique value."
        },
        {
            "type": "table",
            "columns": [
                "Clause",
                "Purpose"
            ],
            "rows": [
                [
                    "SELECT DISTINCT column",
                    "Returns only unique values from the column"
                ],
                [
                    "SELECT DISTINCT col1, col2",
                    "Returns unique combinations of col1 and col2"
                ],
                [
                    "FROM",
                    "Specifies the table to query"
                ]
            ]
        },
        {
            "type": "code",
            "text": "SELECT DISTINCT column_name FROM table_name;"
        },
        {
            "type": "note",
            "text": "DISTINCT applies to the entire row of selected columns, not just the first column listed."
        }
    ],
    "examples": [
        {
            "query": "SELECT DISTINCT grade FROM students;",
            "description": "Fetch unique grades",
            "explanation": "Returns each grade appearing only once from the students table."
        },
        {
            "query": "SELECT DISTINCT age FROM students;",
            "description": "Fetch unique ages",
            "explanation": "Returns each unique age found in the students table."
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "students",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "age",
                        "type": "INTEGER"
                    },
                    {
                        "name": "grade",
                        "type": "TEXT"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "students": [
            {
                "id": 1,
                "name": "Alice",
                "age": 20,
                "grade": "A"
            },
            {
                "id": 2,
                "name": "Bob",
                "age": 21,
                "grade": "B"
            },
            {
                "id": 3,
                "name": "Charlie",
                "age": 19,
                "grade": "A"
            },
            {
                "id": 4,
                "name": "Diana",
                "age": 22,
                "grade": "C"
            },
            {
                "id": 5,
                "name": "Eve",
                "age": 20,
                "grade": "B"
            }
        ]
    },
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic SELECT Query",
            "description": "Write a SELECT query to retrieve all columns from the main table in this lesson.",
            "starterCode": "-- Write your SELECT query here\nSELECT \n-- Your columns here\nFROM \n-- Your table here",
            "solution": "SELECT * FROM customers;",
            "hint": "Use SELECT * to get all columns, and don't forget the table name after FROM.",
            "expectedOutput": "All rows and columns from the table."
        },
        {
            "id": "practice_2",
            "title": "Specific Columns",
            "description": "Select only specific columns instead of using *.",
            "starterCode": "-- Select specific columns\nSELECT \n-- List specific columns\nFROM customers;",
            "solution": "SELECT customer_id, name FROM customers;",
            "hint": "List the column names separated by commas after SELECT.",
            "expectedOutput": "Only the specified columns from all rows."
        },
        {
            "id": "practice_3",
            "title": "Column Aliases",
            "description": "Use aliases to rename columns in your output.",
            "starterCode": "-- Use column aliases\nSELECT \n-- Column with alias\nFROM customers;",
            "solution": "SELECT customer_id AS id, name AS customer_name FROM customers;",
            "hint": "Use AS keyword to create aliases: column_name AS alias_name.",
            "expectedOutput": "Columns with new names as specified by aliases."
        },
        {
            "id": "practice_4",
            "title": "Complete Query",
            "description": "Write a complete SELECT query with multiple columns and aliases.",
            "starterCode": "-- Complete SELECT query\nSELECT \n-- Multiple columns with aliases\nFROM customers;",
            "solution": "SELECT customer_id AS id, name AS full_name, join_date AS registration_date FROM customers;",
            "hint": "Combine multiple columns with different aliases in one query.",
            "expectedOutput": "All specified columns with meaningful aliases."
        }
    ],
    "quiz": [
        {
            "id": "select-distinct_q1",
            "type": "mcq",
            "question": "What is the primary purpose of SELECT DISTINCT?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement SELECT DISTINCT functionality",
                "To create database backups"
            ],
            "answer": "To implement SELECT DISTINCT functionality",
            "explanation": "SELECT DISTINCT is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "select-distinct_q2",
            "type": "truefalse",
            "question": "SELECT DISTINCT can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including SELECT DISTINCT can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "select-distinct_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using SELECT DISTINCT?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using SELECT DISTINCT, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "select-distinct_q4",
            "type": "truefalse",
            "question": "SELECT DISTINCT is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "select-distinct_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with SELECT DISTINCT?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "select-distinct_q6",
            "type": "mcq",
            "question": "When learning SELECT DISTINCT, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "select-distinct_q7",
            "type": "truefalse",
            "question": "Understanding SELECT DISTINCT is important for database professionals.",
            "answer": true,
            "explanation": "SELECT DISTINCT is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "select-distinct_q8",
            "type": "mcq",
            "question": "What should you do before using SELECT DISTINCT in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "select-distinct_ch1",
            "title": "Explore Uniqueness",
            "steps": [
                {
                    "stepId": "select-distinct_select-distinct_ch1_step1",
                    "description": "Step 1: Get all unique grades.",
                    "solution": "SELECT DISTINCT grade FROM students;"
                },
                {
                    "stepId": "select-distinct_select-distinct_ch1_step2",
                    "description": "Step 2: Get all unique ages from the students table.",
                    "solution": "SELECT DISTINCT age FROM students;"
                }
            ]
        }
    ]
}