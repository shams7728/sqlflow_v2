{
    "id": "exists-any-all",
    "title": "EXISTS, ANY, and ALL",
    "category": "Subqueries & Set Ops",
    "difficulty": "Advanced",
    "estimatedTime": "25 min",
    "starterQuery": "-- Find customers who have placed an order\nSELECT c.name\nFROM customers c\nWHERE EXISTS (SELECT 1 FROM orders o WHERE o.customer_id = c.id);",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What are these operators?\n`EXISTS`, `ANY`, and `ALL` are logical operators used with subqueries. They allow you to perform more complex checks than a simple `=` or `IN`."
        },
        {
            "type": "paragraph",
            "text": "2. How does EXISTS work?\nThe `EXISTS` operator checks for the existence of rows in a subquery's result set. It returns `TRUE` if the subquery returns one or more rows, and `FALSE` otherwise. It's highly efficient because it stops processing as soon as it finds the first matching row."
        },
        {
            "type": "paragraph",
            "text": "3. How do ANY and ALL work?\n`ANY` and `ALL` are used to compare a single value to a list of values returned by a subquery. `ANY` returns `TRUE` if the comparison is true for at least one value in the list. `ALL` returns `TRUE` only if the comparison is true for all values in the list."
        },
        {
            "type": "paragraph",
            "text": "4. What's a practical example?\n`= ANY(subquery)` is the same as `IN (subquery)`. A more interesting example is `> ANY(subquery)`, which means 'greater than the minimum value'. Conversely, `> ALL(subquery)` means 'greater than the maximum value'."
        },
        {
            "type": "code",
            "text": "-- Find products with a price greater than ANY product in the 'Budget' category\nSELECT product_name FROM products\nWHERE price > ANY (SELECT price FROM products WHERE category = 'Budget');"
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "customers",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT"
                    },
                    {
                        "name": "city",
                        "type": "TEXT"
                    }
                ]
            },
            {
                "name": "orders",
                "columns": [
                    {
                        "name": "order_id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "customer_id",
                        "type": "INTEGER"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "customers": [
            {
                "id": 1,
                "name": "John Smith",
                "city": "New York"
            },
            {
                "id": 2,
                "name": "Jane Doe",
                "city": "London"
            },
            {
                "id": 3,
                "name": "Peter Jones",
                "city": "Paris"
            },
            {
                "id": 4,
                "name": "Susan Williams",
                "city": "London"
            }
        ],
        "orders": [
            {
                "order_id": 101,
                "customer_id": 1,
                "amount": 150
            },
            {
                "order_id": 102,
                "customer_id": 2,
                "amount": 200
            },
            {
                "order_id": 103,
                "customer_id": 1,
                "amount": 50
            },
            {
                "order_id": 104,
                "customer_id": 4,
                "amount": 300
            }
        ]
    },
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic EXISTS, ANY, and ALL Query",
            "description": "Practice the fundamental concepts of EXISTS, ANY, and ALL.",
            "starterCode": "-- Practice EXISTS, ANY, and ALL\n-- Write your query here",
            "solution": "-- Solution will depend on the specific EXISTS, ANY, and ALL lesson",
            "hint": "Review the EXISTS, ANY, and ALL syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating EXISTS, ANY, and ALL functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate EXISTS, ANY, and ALL",
            "description": "Apply EXISTS, ANY, and ALL with additional complexity.",
            "starterCode": "-- Intermediate EXISTS, ANY, and ALL practice\n-- Your code here",
            "solution": "-- More complex EXISTS, ANY, and ALL solution",
            "hint": "Combine EXISTS, ANY, and ALL with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using EXISTS, ANY, and ALL."
        },
        {
            "id": "practice_3",
            "title": "Advanced EXISTS, ANY, and ALL",
            "description": "Master advanced EXISTS, ANY, and ALL techniques.",
            "starterCode": "-- Advanced EXISTS, ANY, and ALL practice\n-- Your advanced query here",
            "solution": "-- Advanced EXISTS, ANY, and ALL solution",
            "hint": "Think about edge cases and optimization for EXISTS, ANY, and ALL.",
            "expectedOutput": "Advanced EXISTS, ANY, and ALL results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world EXISTS, ANY, and ALL",
            "description": "Apply EXISTS, ANY, and ALL to solve a realistic business problem.",
            "starterCode": "-- Real-world EXISTS, ANY, and ALL scenario\n-- Solve the business problem",
            "solution": "-- Business-focused EXISTS, ANY, and ALL solution",
            "hint": "Consider how EXISTS, ANY, and ALL would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "exists-any-all_q1",
            "type": "mcq",
            "question": "What is the primary purpose of EXISTS, ANY, and ALL?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement EXISTS, ANY, and ALL functionality",
                "To create database backups"
            ],
            "answer": "To implement EXISTS, ANY, and ALL functionality",
            "explanation": "EXISTS, ANY, and ALL is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "exists-any-all_q2",
            "type": "truefalse",
            "question": "EXISTS, ANY, and ALL can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including EXISTS, ANY, and ALL can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "exists-any-all_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using EXISTS, ANY, and ALL?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using EXISTS, ANY, and ALL, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "exists-any-all_q4",
            "type": "truefalse",
            "question": "EXISTS, ANY, and ALL is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "exists-any-all_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with EXISTS, ANY, and ALL?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "exists-any-all_q6",
            "type": "mcq",
            "question": "When learning EXISTS, ANY, and ALL, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "exists-any-all_q7",
            "type": "truefalse",
            "question": "Understanding EXISTS, ANY, and ALL is important for database professionals.",
            "answer": true,
            "explanation": "EXISTS, ANY, and ALL is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "exists-any-all_q8",
            "type": "mcq",
            "question": "What should you do before using EXISTS, ANY, and ALL in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "eaa_ch1",
            "title": "Find Customers with No Orders",
            "steps": [
                {
                    "stepId": "eaa_ch1_step1",
                    "description": "Using `NOT EXISTS`, write a query to find the names of all customers who have not placed any orders.",
                    "solution": "SELECT name FROM customers c WHERE NOT EXISTS (SELECT 1 FROM orders o WHERE o.customer_id = c.id);"
                }
            ]
        },
        {
            "id": "eaa_ch2",
            "title": "Find the Top Spender",
            "steps": [
                {
                    "stepId": "eaa_ch2_step1",
                    "description": "Using `>= ALL`, find the name of the customer(s) who have placed an order with an amount greater than or equal to all other order amounts.",
                    "solution": "SELECT c.name FROM customers c JOIN orders o ON c.id = o.customer_id WHERE o.amount >= ALL (SELECT amount FROM orders);"
                }
            ]
        }
    ]
}