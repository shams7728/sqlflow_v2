{
    "id": "user-role-management",
    "title": "User & Role Management",
    "category": "Security & Admin",
    "difficulty": "Advanced",
    "estimatedTime": "25 min",
    "starterQuery": "/* This is a conceptual lesson on database security and permissions. */\n-- The examples below use standard SQL syntax.",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is User and Role Management?\nUser and role management is the process of controlling access to a database. It involves creating users (accounts that can log in) and roles (groups of permissions), and then assigning specific permissions to those users and roles to define what data they can see and what actions they can perform."
        },
        {
            "type": "paragraph",
            "text": "2. What are Privileges?\nA privilege is a permission to perform a specific action. Common privileges include `SELECT`, `INSERT`, `UPDATE`, and `DELETE` on tables. There are also administrative privileges, like `CREATE USER` or `CREATE TABLE`."
        },
        {
            "type": "paragraph",
            "text": "3. What is a Role?\nInstead of assigning permissions to each user one by one, it's much more efficient to use roles. A role is a named group of privileges. You can create a role like 'analyst' and give it `SELECT` permissions on all tables. Then, you can simply grant the 'analyst' role to any user who needs that level of access."
        },
        {
            "type": "paragraph",
            "text": "4. What is the `GRANT` command?\nThe `GRANT` command is used to give privileges to a user or a role. You can grant permission to perform specific actions on specific database objects."
        },
        {
            "type": "code",
            "text": "-- Example: Granting permissions\n-- Give the 'analyst' role permission to select data from the products table\nGRANT SELECT ON products TO analyst;\n\n-- Give a specific user permission to insert and update data\nGRANT INSERT, UPDATE ON customers TO bob;"
        },
        {
            "type": "paragraph",
            "text": "5. What is the `REVOKE` command?\nThe `REVOKE` command is the opposite of `GRANT`. It is used to take away privileges from a user or a role."
        },
        {
            "type": "code",
            "text": "-- Example: Revoking permissions\n-- Remove the 'analyst' role's ability to select from the products table\nREVOKE SELECT ON products FROM analyst;"
        },
        {
            "type": "note",
            "text": "This is a core part of the 'Principle of Least Privilege', where users are only given the exact permissions they need to do their job, and no more."
        }
    ],
    "schema": {
        "tables": []
    },
    "sample_data": {},
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic User & Role Management Query",
            "description": "Practice the fundamental concepts of User & Role Management.",
            "starterCode": "-- Practice User & Role Management\n-- Write your query here",
            "solution": "-- Solution will depend on the specific User & Role Management lesson",
            "hint": "Review the User & Role Management syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating User & Role Management functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate User & Role Management",
            "description": "Apply User & Role Management with additional complexity.",
            "starterCode": "-- Intermediate User & Role Management practice\n-- Your code here",
            "solution": "-- More complex User & Role Management solution",
            "hint": "Combine User & Role Management with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using User & Role Management."
        },
        {
            "id": "practice_3",
            "title": "Advanced User & Role Management",
            "description": "Master advanced User & Role Management techniques.",
            "starterCode": "-- Advanced User & Role Management practice\n-- Your advanced query here",
            "solution": "-- Advanced User & Role Management solution",
            "hint": "Think about edge cases and optimization for User & Role Management.",
            "expectedOutput": "Advanced User & Role Management results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world User & Role Management",
            "description": "Apply User & Role Management to solve a realistic business problem.",
            "starterCode": "-- Real-world User & Role Management scenario\n-- Solve the business problem",
            "solution": "-- Business-focused User & Role Management solution",
            "hint": "Consider how User & Role Management would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "challenges": [],
    "quiz": [
        {
            "id": "user-role-management_q1",
            "type": "mcq",
            "question": "What is the primary purpose of User & Role Management?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement User & Role Management functionality",
                "To create database backups"
            ],
            "answer": "To implement User & Role Management functionality",
            "explanation": "User & Role Management is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "user-role-management_q2",
            "type": "truefalse",
            "question": "User & Role Management can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including User & Role Management can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "user-role-management_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using User & Role Management?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using User & Role Management, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "user-role-management_q4",
            "type": "truefalse",
            "question": "User & Role Management is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "user-role-management_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with User & Role Management?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "user-role-management_q6",
            "type": "mcq",
            "question": "When learning User & Role Management, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "user-role-management_q7",
            "type": "truefalse",
            "question": "Understanding User & Role Management is important for database professionals.",
            "answer": true,
            "explanation": "User & Role Management is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "user-role-management_q8",
            "type": "mcq",
            "question": "What should you do before using User & Role Management in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ]
}