{
    "id": "select",
    "title": "SELECT Statement",
    "category": "Data Retrieval",
    "difficulty": "Beginner",
    "estimatedTime": "10 min",
    "starterQuery": "SELECT * FROM students;",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is SELECT?\nThe SELECT statement is used to retrieve data from a database. It is the most frequently used SQL command to extract rows and columns from a table."
        },
        {
            "type": "paragraph",
            "text": "2. Why use SELECT?\nYou use SELECT to view specific or full data. Whether you want just one column or the entire table, SELECT helps retrieve exactly what you need."
        },
        {
            "type": "paragraph",
            "text": "3. Where is SELECT used?\nSELECT is used in almost every SQL query involving data display, reporting, dashboards, analytics, exports, etc."
        },
        {
            "type": "paragraph",
            "text": "4. How to use SELECT?\nYou can list specific column names or use * to retrieve all columns."
        },
        {
            "type": "table",
            "columns": [
                "Clause",
                "Description"
            ],
            "rows": [
                [
                    "SELECT",
                    "Specifies the columns to return"
                ],
                [
                    "FROM",
                    "Specifies the table to retrieve data from"
                ],
                [
                    "WHERE",
                    "Optional: Filters records based on conditions"
                ],
                [
                    "ORDER BY",
                    "Optional: Sorts the result set"
                ]
            ]
        },
        {
            "type": "code",
            "text": "SELECT column1, column2 FROM table_name;"
        },
        {
            "type": "note",
            "text": "SQL keywords are case-insensitive but are typically written in uppercase for better readability."
        }
    ],
    "examples": [
        {
            "query": "SELECT name, age FROM students;",
            "description": "Select specific columns",
            "explanation": "This query retrieves only the name and age of each student."
        },
        {
            "query": "SELECT * FROM students;",
            "description": "Select all columns",
            "explanation": "This query retrieves every column for all students."
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "students",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "age",
                        "type": "INTEGER"
                    },
                    {
                        "name": "grade",
                        "type": "TEXT"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "students": [
            {
                "id": 1,
                "name": "Alice",
                "age": 20,
                "grade": "A"
            },
            {
                "id": 2,
                "name": "Bob",
                "age": 21,
                "grade": "B"
            },
            {
                "id": 3,
                "name": "Charlie",
                "age": 19,
                "grade": "A"
            },
            {
                "id": 4,
                "name": "Diana",
                "age": 22,
                "grade": "C"
            }
        ]
    },
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic SELECT Query",
            "description": "Write a SELECT query to retrieve all columns from the main table in this lesson.",
            "starterCode": "-- Write your SELECT query here\nSELECT \n-- Your columns here\nFROM \n-- Your table here",
            "solution": "SELECT * FROM customers;",
            "hint": "Use SELECT * to get all columns, and don't forget the table name after FROM.",
            "expectedOutput": "All rows and columns from the table."
        },
        {
            "id": "practice_2",
            "title": "Specific Columns",
            "description": "Select only specific columns instead of using *.",
            "starterCode": "-- Select specific columns\nSELECT \n-- List specific columns\nFROM customers;",
            "solution": "SELECT customer_id, name FROM customers;",
            "hint": "List the column names separated by commas after SELECT.",
            "expectedOutput": "Only the specified columns from all rows."
        },
        {
            "id": "practice_3",
            "title": "Column Aliases",
            "description": "Use aliases to rename columns in your output.",
            "starterCode": "-- Use column aliases\nSELECT \n-- Column with alias\nFROM customers;",
            "solution": "SELECT customer_id AS id, name AS customer_name FROM customers;",
            "hint": "Use AS keyword to create aliases: column_name AS alias_name.",
            "expectedOutput": "Columns with new names as specified by aliases."
        },
        {
            "id": "practice_4",
            "title": "Complete Query",
            "description": "Write a complete SELECT query with multiple columns and aliases.",
            "starterCode": "-- Complete SELECT query\nSELECT \n-- Multiple columns with aliases\nFROM customers;",
            "solution": "SELECT customer_id AS id, name AS full_name, join_date AS registration_date FROM customers;",
            "hint": "Combine multiple columns with different aliases in one query.",
            "expectedOutput": "All specified columns with meaningful aliases."
        }
    ],
    "quiz": [
        {
            "id": "select_q1",
            "type": "mcq",
            "question": "What is the primary purpose of SELECT Statement?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement SELECT Statement functionality",
                "To create database backups"
            ],
            "answer": "To implement SELECT Statement functionality",
            "explanation": "SELECT Statement is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "select_q2",
            "type": "truefalse",
            "question": "SELECT Statement can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including SELECT Statement can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "select_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using SELECT Statement?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using SELECT Statement, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "select_q4",
            "type": "truefalse",
            "question": "SELECT Statement is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "select_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with SELECT Statement?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "select_q6",
            "type": "mcq",
            "question": "When learning SELECT Statement, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "select_q7",
            "type": "truefalse",
            "question": "Understanding SELECT Statement is important for database professionals.",
            "answer": true,
            "explanation": "SELECT Statement is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "select_q8",
            "type": "mcq",
            "question": "What should you do before using SELECT Statement in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "select_ch1",
            "title": "Student Record Explorer",
            "steps": [
                {
                    "stepId": "select_ch1_step1",
                    "description": "Step 1: Select name and grade from students.",
                    "solution": "SELECT name, grade FROM students;"
                },
                {
                    "stepId": "select_ch1_step2",
                    "description": "Step 2: Select all records from students.",
                    "solution": "SELECT * FROM students;"
                }
            ]
        }
    ]
}