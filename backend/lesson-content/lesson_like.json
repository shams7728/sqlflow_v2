{
    "id": "like",
    "title": "LIKE Operator",
    "category": "Filtering",
    "difficulty": "Beginner",
    "estimatedTime": "10 min",
    "starterQuery": "SELECT * FROM students WHERE name LIKE 'A%';",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What is the LIKE operator?\nThe LIKE operator is used in a WHERE clause to search for a specified pattern in a column."
        },
        {
            "type": "paragraph",
            "text": "2. Why use LIKE?\nLIKE is useful when you want to filter rows based on partial matches, such as finding names starting with 'A' or ending with 'n'."
        },
        {
            "type": "paragraph",
            "text": "3. Where is LIKE used?\nIt's commonly used with text columns in SELECT queries to find matching string patterns."
        },
        {
            "type": "paragraph",
            "text": "4. How does LIKE work?\nLIKE supports two wildcard characters: \n- % (percent) matches any sequence of characters\n- _ (underscore) matches a single character"
        },
        {
            "type": "table",
            "columns": [
                "Pattern",
                "Matches"
            ],
            "rows": [
                [
                    "'A%'",
                    "Values starting with 'A'"
                ],
                [
                    "'%n'",
                    "Values ending with 'n'"
                ],
                [
                    "'%a%'",
                    "Values containing 'a'"
                ],
                [
                    "'Jo_n'",
                    "Values like 'John', 'Joan'"
                ]
            ]
        },
        {
            "type": "note",
            "text": "LIKE is case-insensitive in SQLite, but may be case-sensitive in other databases like PostgreSQL."
        },
        {
            "type": "code",
            "text": "SELECT * FROM students WHERE name LIKE '%a%';"
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "students",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "age",
                        "type": "INTEGER"
                    },
                    {
                        "name": "grade",
                        "type": "TEXT"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "students": [
            {
                "id": 1,
                "name": "Alice",
                "age": 20,
                "grade": "A"
            },
            {
                "id": 2,
                "name": "Aaron",
                "age": 21,
                "grade": "B"
            },
            {
                "id": 3,
                "name": "Brian",
                "age": 22,
                "grade": "C"
            },
            {
                "id": 4,
                "name": "Diana",
                "age": 19,
                "grade": "A"
            },
            {
                "id": 5,
                "name": "Evan",
                "age": 18,
                "grade": "B"
            }
        ]
    },
    "examples": [
        {
            "query": "SELECT name FROM students WHERE name LIKE 'A%';",
            "description": "Names starting with A",
            "explanation": "Finds all students whose names begin with the letter A."
        },
        {
            "query": "SELECT * FROM students WHERE name LIKE '%n';",
            "description": "Names ending with n",
            "explanation": "Returns students whose names end with the letter n."
        }
    ],
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic LIKE Operator Query",
            "description": "Practice the fundamental concepts of LIKE Operator.",
            "starterCode": "-- Practice LIKE Operator\n-- Write your query here",
            "solution": "-- Solution will depend on the specific LIKE Operator lesson",
            "hint": "Review the LIKE Operator syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating LIKE Operator functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate LIKE Operator",
            "description": "Apply LIKE Operator with additional complexity.",
            "starterCode": "-- Intermediate LIKE Operator practice\n-- Your code here",
            "solution": "-- More complex LIKE Operator solution",
            "hint": "Combine LIKE Operator with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using LIKE Operator."
        },
        {
            "id": "practice_3",
            "title": "Advanced LIKE Operator",
            "description": "Master advanced LIKE Operator techniques.",
            "starterCode": "-- Advanced LIKE Operator practice\n-- Your advanced query here",
            "solution": "-- Advanced LIKE Operator solution",
            "hint": "Think about edge cases and optimization for LIKE Operator.",
            "expectedOutput": "Advanced LIKE Operator results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world LIKE Operator",
            "description": "Apply LIKE Operator to solve a realistic business problem.",
            "starterCode": "-- Real-world LIKE Operator scenario\n-- Solve the business problem",
            "solution": "-- Business-focused LIKE Operator solution",
            "hint": "Consider how LIKE Operator would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "like_q1",
            "type": "mcq",
            "question": "What is the primary purpose of LIKE Operator?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement LIKE Operator functionality",
                "To create database backups"
            ],
            "answer": "To implement LIKE Operator functionality",
            "explanation": "LIKE Operator is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "like_q2",
            "type": "truefalse",
            "question": "LIKE Operator can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including LIKE Operator can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "like_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using LIKE Operator?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using LIKE Operator, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "like_q4",
            "type": "truefalse",
            "question": "LIKE Operator is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "like_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with LIKE Operator?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "like_q6",
            "type": "mcq",
            "question": "When learning LIKE Operator, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "like_q7",
            "type": "truefalse",
            "question": "Understanding LIKE Operator is important for database professionals.",
            "answer": true,
            "explanation": "LIKE Operator is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "like_q8",
            "type": "mcq",
            "question": "What should you do before using LIKE Operator in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "like_ch1",
            "title": "Pattern Matching",
            "steps": [
                {
                    "stepId": "like_ch1_step1",
                    "description": "Step 1: Get students with 'a' in their name.",
                    "solution": "SELECT * FROM students WHERE name LIKE '%a%';"
                },
                {
                    "stepId": "like_ch1_step2",
                    "description": "Step 2: Select names starting with 'E'.",
                    "solution": "SELECT name FROM students WHERE name LIKE 'E%';"
                }
            ]
        }
    ]
}