{
    "id": "sql-commands-overview",
    "title": "SQL Commands Overview",
    "category": "Getting Started",
    "difficulty": "Beginner",
    "estimatedTime": "10 min",
    "starterQuery": "SELECT * FROM departments;",
    "theory": [
        {
            "type": "paragraph",
            "text": "1. What are SQL Commands?\nSQL commands are instructions used to communicate with a database. These commands allow users to perform various operations such as retrieving, updating, inserting, and deleting data."
        },
        {
            "type": "paragraph",
            "text": "2. Why are SQL Commands Categorized?\nTo organize and understand the wide range of operations, SQL commands are grouped into categories based on their function â€” such as Data Definition (DDL), Data Manipulation (DML), Transaction Control (TCL), etc."
        },
        {
            "type": "paragraph",
            "text": "3. What are the main categories of SQL commands?\nSQL commands are commonly categorized into:"
        },
        {
            "type": "table",
            "columns": [
                "Command",
                "Category",
                "Description"
            ],
            "rows": [
                [
                    "CREATE",
                    "DDL",
                    "Creates a new table or database."
                ],
                [
                    "DROP",
                    "DDL",
                    "Deletes an existing table or database."
                ],
                [
                    "INSERT",
                    "DML",
                    "Adds new data into a table."
                ],
                [
                    "SELECT",
                    "DML",
                    "Fetches data from one or more tables."
                ],
                [
                    "UPDATE",
                    "DML",
                    "Modifies existing records."
                ],
                [
                    "DELETE",
                    "DML",
                    "Removes data from a table."
                ],
                [
                    "COMMIT",
                    "TCL",
                    "Saves changes made by a transaction."
                ],
                [
                    "ROLLBACK",
                    "TCL",
                    "Reverts changes made in a transaction."
                ]
            ]
        },
        {
            "type": "paragraph",
            "text": "4. Where are these commands used?\n- `SELECT` is used in almost every report or data retrieval use case.\n- `INSERT`, `UPDATE`, `DELETE` are used in form submissions, admin dashboards, or applications that modify data.\n- `CREATE` and `DROP` are mostly used in schema design or setup scripts.\n- `COMMIT` and `ROLLBACK` are used when working with transactions (e.g., in banking systems)."
        },
        {
            "type": "code",
            "text": "-- Example SQL Commands\nSELECT * FROM departments;\nINSERT INTO departments (name, location) VALUES ('Design', 'Boston');\nUPDATE departments SET location = 'Remote' WHERE name = 'HR';\nDELETE FROM departments WHERE id = 2;"
        },
        {
            "type": "note",
            "text": "Each SQL command has a specific role. DML commands affect data. DDL affects table structures. TCL manages transactions."
        }
    ],
    "schema": {
        "tables": [
            {
                "name": "departments",
                "columns": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "constraints": "PRIMARY KEY"
                    },
                    {
                        "name": "name",
                        "type": "TEXT",
                        "constraints": "NOT NULL"
                    },
                    {
                        "name": "location",
                        "type": "TEXT"
                    }
                ]
            }
        ]
    },
    "sample_data": {
        "departments": [
            {
                "id": 1,
                "name": "Engineering",
                "location": "New York"
            },
            {
                "id": 2,
                "name": "Marketing",
                "location": "San Francisco"
            },
            {
                "id": 3,
                "name": "HR",
                "location": "Chicago"
            }
        ]
    },
    "examples": [
        {
            "query": "SELECT name FROM departments;",
            "description": "Retrieve department names",
            "explanation": "This gets the `name` column from the departments table."
        },
        {
            "query": "INSERT INTO departments (name, location) VALUES ('Design', 'Boston');",
            "description": "Insert new department",
            "explanation": "Adds a new department to the departments table."
        }
    ],
    "practice": [
        {
            "id": "practice_1",
            "title": "Basic SQL Commands Overview Query",
            "description": "Practice the fundamental concepts of SQL Commands Overview.",
            "starterCode": "-- Practice SQL Commands Overview\n-- Write your query here",
            "solution": "-- Solution will depend on the specific SQL Commands Overview lesson",
            "hint": "Review the SQL Commands Overview syntax and examples from the theory section.",
            "expectedOutput": "Results demonstrating SQL Commands Overview functionality."
        },
        {
            "id": "practice_2",
            "title": "Intermediate SQL Commands Overview",
            "description": "Apply SQL Commands Overview with additional complexity.",
            "starterCode": "-- Intermediate SQL Commands Overview practice\n-- Your code here",
            "solution": "-- More complex SQL Commands Overview solution",
            "hint": "Combine SQL Commands Overview with other SQL concepts you've learned.",
            "expectedOutput": "More complex results using SQL Commands Overview."
        },
        {
            "id": "practice_3",
            "title": "Advanced SQL Commands Overview",
            "description": "Master advanced SQL Commands Overview techniques.",
            "starterCode": "-- Advanced SQL Commands Overview practice\n-- Your advanced query here",
            "solution": "-- Advanced SQL Commands Overview solution",
            "hint": "Think about edge cases and optimization for SQL Commands Overview.",
            "expectedOutput": "Advanced SQL Commands Overview results with optimized performance."
        },
        {
            "id": "practice_4",
            "title": "Real-world SQL Commands Overview",
            "description": "Apply SQL Commands Overview to solve a realistic business problem.",
            "starterCode": "-- Real-world SQL Commands Overview scenario\n-- Solve the business problem",
            "solution": "-- Business-focused SQL Commands Overview solution",
            "hint": "Consider how SQL Commands Overview would be used in actual database applications.",
            "expectedOutput": "Practical results that solve real business needs."
        }
    ],
    "quiz": [
        {
            "id": "sql-commands-overview_q1",
            "type": "mcq",
            "question": "What is the primary purpose of SQL Commands Overview?",
            "options": [
                "To modify table structure",
                "To query data from tables",
                "To implement SQL Commands Overview functionality",
                "To create database backups"
            ],
            "answer": "To implement SQL Commands Overview functionality",
            "explanation": "SQL Commands Overview is specifically designed to handle its particular SQL functionality as described in the lesson."
        },
        {
            "id": "sql-commands-overview_q2",
            "type": "truefalse",
            "question": "SQL Commands Overview can be used with other SQL clauses and commands.",
            "answer": true,
            "explanation": "Most SQL commands including SQL Commands Overview can be combined with other clauses to create more powerful and specific queries."
        },
        {
            "id": "sql-commands-overview_q3",
            "type": "mcq",
            "question": "Which of the following is a key consideration when using SQL Commands Overview?",
            "options": [
                "Performance impact",
                "Data accuracy",
                "Syntax correctness",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "When using SQL Commands Overview, you should always consider performance, data accuracy, and correct syntax to ensure optimal results."
        },
        {
            "id": "sql-commands-overview_q4",
            "type": "truefalse",
            "question": "SQL Commands Overview is supported by all SQL database systems.",
            "answer": false,
            "explanation": "Different SQL database systems may have variations in syntax and support for various SQL features. Always check your specific database documentation."
        },
        {
            "id": "sql-commands-overview_q5",
            "type": "mcq",
            "question": "What happens if you use incorrect syntax with SQL Commands Overview?",
            "options": [
                "The query runs with default values",
                "The database crashes",
                "You get a syntax error",
                "The query is automatically corrected"
            ],
            "answer": "You get a syntax error",
            "explanation": "SQL databases will return syntax errors when commands are not properly formatted, helping you identify and fix issues."
        },
        {
            "id": "sql-commands-overview_q6",
            "type": "mcq",
            "question": "When learning SQL Commands Overview, what is the best practice?",
            "options": [
                "Memorize all syntax variations",
                "Practice with real examples",
                "Only read the documentation",
                "Skip the fundamentals"
            ],
            "answer": "Practice with real examples",
            "explanation": "Hands-on practice with real examples is the most effective way to master SQL concepts and build practical skills."
        },
        {
            "id": "sql-commands-overview_q7",
            "type": "truefalse",
            "question": "Understanding SQL Commands Overview is important for database professionals.",
            "answer": true,
            "explanation": "SQL Commands Overview is a fundamental SQL concept that database professionals should understand to work effectively with databases."
        },
        {
            "id": "sql-commands-overview_q8",
            "type": "mcq",
            "question": "What should you do before using SQL Commands Overview in a production environment?",
            "options": [
                "Test it thoroughly",
                "Read the documentation",
                "Understand the impact",
                "All of the above"
            ],
            "answer": "All of the above",
            "explanation": "Before using any SQL command in production, you should test thoroughly, read documentation, and understand the potential impact on your system."
        }
    ],
    "challenges": [
        {
            "id": "sql-commands-overview_ch1",
            "title": "Command Practice",
            "steps": [
                {
                    "stepId": "sql-commands-overview_ch1_step1",
                    "description": "Step 1: Select all departments.",
                    "solution": "SELECT * FROM departments;"
                },
                {
                    "stepId": "sql-commands-overview_ch1_step2",
                    "description": "Step 2: Insert a new department called 'Design' in 'Boston'.",
                    "solution": "INSERT INTO departments (name, location) VALUES ('Design', 'Boston');"
                }
            ]
        }
    ]
}